
use vit;

select * from workers;

select count(department) where department='account';
select department,count(department) where department='account';
select count(department) from workers group by department;

# group by
select department, count(*) from workers group by department;
select department, avg(salary) from workers group by department;
select department, sum(salary) from workers group by department;
select department, min(joining_date) from workers group by department;
select department, max(salary) from workers group by department;

select department, avg(salary) from workers group 
by department order by avg(salary) desc;

select department, count(*) from workers 
group by department order by department;

select department, sum(salary) from workers 
group by department having sum(salary) > 110000;
select department, avg(salary) from workers 
group by department having avg(salary) >= 58000;
select department, count(*) from workers
 group by department having count(*) > 1;

# nested
select * from workers where salary = (
select max(salary) from workers);

select fname, lname from workers where department = 
(select department from workers where id = 1);

select * from workers where salary >
 (select avg(salary) from workers);

select fname, lname from workers where id in
 (select id from workers where department = 'it');

select * from workers where joining_date < 
(select joining_date from workers where fname = 'emily');

create table student (
s_id int primary key,
s_name varchar(50),
s_class varchar(20)
);

insert into student values (1, 'ash', '10a');
insert into student values (2, 'esh', '10b');
insert into student values (3, 'rud', '10a');
insert into student values (4, 'ras', '10c');

create table address (
s_id int,
s_address varchar(100)
);

insert into address values (1, 'delhi');
insert into address values (2, 'mumbai');
insert into address values (4, 'chennai');
insert into address values (5, 'kolkata');

select * from student cross join address;

select * from student inner join address on student.s_id = address.s_id;

select * from student natural join address;

select * from student left join address on student.s_id = address.s_id;

select * from student right join address on student.s_id = address.s_id;

select * from student full outer join address on student.s_id = address.s_id;
